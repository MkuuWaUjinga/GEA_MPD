service: mpd-rest-api

provider:
  name: aws
  runtime: python3.7
  region: eu-central-1
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-central-1:*:*"
    - Effect: Allow
      Action:
        - ses:*
      Resource: "arn:aws:ses:eu-central-1:*"
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource: "arn:aws:s3:::farmatic-assets/*"

functions:
  users:
    handler: resources/users/users.entry
    events:
      - http:
          path: users/{id}
          method: get
          cors: true
  cows:
    handler: resources/cows/cows.entry
    events:
      - http:
          path: cows
          method: get
          cors: true
  chatrooms:
    handler: resources/chatrooms/chatrooms.entry
    events:
      - http:
          path: chatrooms/{chatroomId}/messages
          method: get
          cors: true
      - http:
          path: chatrooms/{chatroomId}/messages
          method: post
          cors: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Users${self:custom.tableStageAppendix.${self:custom.myStage}}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    FarmMetricsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: FarmMetrics${self:custom.tableStageAppendix.${self:custom.myStage}}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: metricIdentifier
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: metricIdentifier
            KeyType: RANGE
        ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
    ChatMessagesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ChatMessages${self:custom.tableStageAppendix.${self:custom.myStage}}
        AttributeDefinitions:
          - AttributeName: chatRoomId
            AttributeType: S
          - AttributeName: chatMessageId
            AttributeType: S
        KeySchema:
          - AttributeName: chatRoomId
            KeyType: HASH
          - AttributeName: chatMessageId
            KeyType: RANGE
        ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1

custom:
  tableStageAppendix:
    dev: '-dev'
    prod: ''
  myStage: ${opt:stage, self:provider.stage}
plugins:
  - serverless-python-requirements
